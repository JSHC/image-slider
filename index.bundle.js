(()=>{"use strict";var r={473:(r,n,e)=>{e.d(n,{Z:()=>g});var t=e(537),i=e.n(t),a=e(645),s=e.n(a),o=e(667),d=e.n(o),A=new URL(e(161),e.b),c=new URL(e(188),e.b),l=s()(i()),p=d()(A),u=d()(c);l.push([r.id,"body {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.slider-container {\r\n    width: 640px;\r\n    height: 360px;\r\n    background-color: #222;\r\n}\r\n\r\n.slides {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.slides .slide-navigation-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 2;\r\n    position: absolute;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr;\r\n    align-items: center;\r\n    padding: 0 12px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.slide-navigation {\r\n    width: 48px;\r\n    height: 48px;\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    border-radius: 100%;\r\n    border: 1px solid #888;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.slide-navigation:hover {\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    cursor: pointer;\r\n}\r\n\r\n.slide-navigation-prev {\r\n    justify-self: start;\r\n    grid-column: 1 / 2;\r\n    grid-row: 1;\r\n}\r\n\r\n.slide-navigation-next {\r\n    justify-self: end;\r\n    grid-column: 2 / 3;\r\n    grid-row: 1;\r\n}\r\n\r\n.slides img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n    transition: transform 400ms linear;\r\n}\r\n\r\n.next-arrow {\r\n    background: url("+p+");\r\n    background-size: 32px 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n}\r\n\r\n.prev-arrow {\r\n    background: url("+u+");\r\n    background-size: 32px 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n}\r\n\r\n.slider-dot-navigation-container {\r\n    align-self: end;\r\n    width: 60%;\r\n    justify-self: center;\r\n    grid-column: 1 / span 2;\r\n    height: 32px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 5px;\r\n}\r\n\r\n.slider-dot-container {\r\n    height: 14px;\r\n    width: 14px;\r\n    border-radius: 100%;\r\n    border: 2px solid #ddd;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.slider-dot-container:hover {\r\n    cursor: pointer;\r\n    background-color: #aaa;\r\n}\r\n\r\n.slider-dot {\r\n    height: 10px;\r\n    width: 10px;\r\n    box-sizing: border-box;\r\n    border-radius: 100%;\r\n}\r\n\r\n.slider-dot.selected {\r\n    border: 1px solid #ddd;\r\n    background-color: #555;\r\n}\r\n\r\n.slides-image-wrapper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    position: absolute;\r\n}\r\n\r\n.slides-image-wrapper img {\r\n    flex-shrink: 0;\r\n    transition: transform 400ms linear;\r\n}\r\n\r\n.selected-image {\r\n    transform: translateX(0);\r\n}","",{version:3,sources:["webpack://./src/slider/slider.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,UAAU;IACV,kBAAkB;IAClB,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,0CAA0C;IAC1C,mBAAmB;IACnB,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,kCAAkC;AACtC;;AAEA;IACI,mDAA2C;IAC3C,0BAA0B;IAC1B,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,mDAA0C;IAC1C,0BAA0B;IAC1B,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,oBAAoB;IACpB,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,kCAAkC;AACtC;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:["body {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.slider-container {\r\n    width: 640px;\r\n    height: 360px;\r\n    background-color: #222;\r\n}\r\n\r\n.slides {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.slides .slide-navigation-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 2;\r\n    position: absolute;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr;\r\n    align-items: center;\r\n    padding: 0 12px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.slide-navigation {\r\n    width: 48px;\r\n    height: 48px;\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    border-radius: 100%;\r\n    border: 1px solid #888;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.slide-navigation:hover {\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    cursor: pointer;\r\n}\r\n\r\n.slide-navigation-prev {\r\n    justify-self: start;\r\n    grid-column: 1 / 2;\r\n    grid-row: 1;\r\n}\r\n\r\n.slide-navigation-next {\r\n    justify-self: end;\r\n    grid-column: 2 / 3;\r\n    grid-row: 1;\r\n}\r\n\r\n.slides img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n    transition: transform 400ms linear;\r\n}\r\n\r\n.next-arrow {\r\n    background: url('./assets/arrow-right.svg');\r\n    background-size: 32px 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n}\r\n\r\n.prev-arrow {\r\n    background: url('./assets/arrow-left.svg');\r\n    background-size: 32px 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n}\r\n\r\n.slider-dot-navigation-container {\r\n    align-self: end;\r\n    width: 60%;\r\n    justify-self: center;\r\n    grid-column: 1 / span 2;\r\n    height: 32px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 5px;\r\n}\r\n\r\n.slider-dot-container {\r\n    height: 14px;\r\n    width: 14px;\r\n    border-radius: 100%;\r\n    border: 2px solid #ddd;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.slider-dot-container:hover {\r\n    cursor: pointer;\r\n    background-color: #aaa;\r\n}\r\n\r\n.slider-dot {\r\n    height: 10px;\r\n    width: 10px;\r\n    box-sizing: border-box;\r\n    border-radius: 100%;\r\n}\r\n\r\n.slider-dot.selected {\r\n    border: 1px solid #ddd;\r\n    background-color: #555;\r\n}\r\n\r\n.slides-image-wrapper {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    position: absolute;\r\n}\r\n\r\n.slides-image-wrapper img {\r\n    flex-shrink: 0;\r\n    transition: transform 400ms linear;\r\n}\r\n\r\n.selected-image {\r\n    transform: translateX(0);\r\n}"],sourceRoot:""}]);const g=l},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,i,a){"string"==typeof r&&(r=[[null,r,void 0]]);var s={};if(t)for(var o=0;o<this.length;o++){var d=this[o][0];null!=d&&(s[d]=!0)}for(var A=0;A<r.length;A++){var c=[].concat(r[A]);t&&s[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),n.push(c))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(i," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},s=[],o=0;o<r.length;o++){var d=r[o],A=t.base?d[0]+t.base:d[0],c=a[A]||0,l="".concat(A," ").concat(c);a[A]=c+1;var p=e(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=i(u,t);t.byIndex=o,n.splice(o,0,{identifier:l,updater:g,references:1})}s.push(l)}return s}function i(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,i){var a=t(r=r||[],i=i||{});return function(r){r=r||[];for(var s=0;s<a.length;s++){var o=e(a[s]);n[o].references--}for(var d=t(r,i),A=0;A<a.length;A++){var c=e(a[A]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=d}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,i&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},723:(r,n,e)=>{e.d(n,{Z:()=>I});var t=e(379),i=e.n(t),a=e(795),s=e.n(a),o=e(569),d=e.n(o),A=e(565),c=e.n(A),l=e(216),p=e.n(l),u=e(589),g=e.n(u),h=e(473),m={};m.styleTagTransform=g(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=s(),m.insertStyleElement=p(),i()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals,e(161);class I{constructor(r){return console.log(Array.isArray(r)),this.sliderContainer=document.createElement("div"),this.sliderContainer.classList.add("slider-container"),r&&Array.isArray(r)&&0!==r.length?(this.loadImages(r),this.currentImageIndex=0,this.currentImage=this.images[this.currentImageIndex].src,this.render(),this.sliderContainer):this.sliderContainer}async loadImages(r){this.images=[];for(let n in r)this.loadImage(r,n);console.log(this.images)}loadImage(r,n){let e=new Image;e.src=r[n],this.images[n]=e}render(){const r=document.createElement("div");r.classList.add("slides"),this.imageWrapper=document.createElement("div"),this.imageWrapper.classList.add("slides-image-wrapper"),r.appendChild(this.imageWrapper);const n=document.createElement("div");n.classList.add("slide-navigation-container");const e=document.createElement("div");e.classList.add("slide-navigation","slide-navigation-next"),e.addEventListener("click",(()=>this.nextImage()));const t=document.createElement("div");t.classList.add("next-arrow"),e.appendChild(t);const i=document.createElement("div");i.classList.add("slide-navigation","slide-navigation-prev"),i.addEventListener("click",(()=>this.previousImage()));const a=document.createElement("div");a.classList.add("prev-arrow"),i.appendChild(a),n.append(e,i),r.appendChild(n);const s=document.createElement("div");s.classList.add("slider-dot-navigation-container");for(let r in this.images){const n=document.createElement("div");n.classList.add("slider-dot-container");const e=document.createElement("div");e.classList.add("slider-dot"),Number(r)===this.currentImageIndex&&e.classList.add("selected"),n.addEventListener("click",(()=>{this.setCurrentImageIndex(r)})),n.appendChild(e),s.appendChild(n)}n.appendChild(s);for(let r of this.images)this.imageWrapper.appendChild(r),r.classList.add("selected-image");this.sliderContainer.appendChild(r)}nextImage(){1!==this.images.length&&(this.currentImageIndex+1>=this.images.length?this.currentImageIndex=0:this.currentImageIndex++,this.updateImage())}previousImage(){1!==this.images.length&&(this.currentImageIndex-1<0?this.currentImageIndex=this.images.length-1:this.currentImageIndex--,this.updateImage())}updateImage(){for(let r of this.imageWrapper.childNodes)r.style.transform=`translateX(${-100*this.currentImageIndex}%)`;this.updateDotNavigation()}updateDotNavigation(){const r=Array.from(document.querySelectorAll(".slider-dot"));for(const n in r)Number(n)===Number(this.currentImageIndex)?r[n].classList.add("selected"):r[n].classList.remove("selected")}setCurrentImageIndex(r){this.currentImageIndex=r,this.updateImage()}}},188:(r,n,e)=>{r.exports=e.p+"36bec1667db89cdb26a7.svg"},161:(r,n,e)=>{r.exports=e.p+"16e447b4597e29038bb9.svg"}},n={};function e(t){var i=n[t];if(void 0!==i)return i.exports;var a=n[t]={id:t,exports:{}};return r[t](a,a.exports,e),a.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var r=e(723);const n=e.p+"0b3b7472fa2a930a3377.jpg",t=e.p+"6512ba5698f98d0101f1.jpg",i=e.p+"39895cc90277c60dd475.jpg",a=new r.Z([n,t,i]);document.body.appendChild(a)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,